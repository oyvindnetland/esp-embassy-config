[package]
name = "esp-embassy-config"
version = "0.1.0"
edition = "2024"
license = "MIT"
description = "Stores config information in flash, which is managed by a uart menu system."
homepage = "https://github.com/oyvindnetland/esp-embassy-config"
repository = "https://github.com/oyvindnetland/esp-embassy-config"
readme = "README.md"
categories = ["embedded", "no-std"]
keywords = ["esp32", "flash-storage", "embassy"]

[dependencies]
log = { version = "0.4.21" }
heapless = "0.8.0"
static_cell = { version = "2.0", features = ["nightly"] }

# dependencies for ESP
esp-backtrace = { version = "0.15.0", features = [
    "exception-handler",
    "panic-handler",
    "println",
], optional = true }
esp-hal = "0.23.1"
esp-hal-embassy = "0.6.0"
esp-println = { version = "0.13.1", default-features = false, features = [
    "log",
] }
esp-storage = "0.5.0"

# dependencies for embedded
embedded-io = "0.6.1"
embedded-io-async = "0.6.1"
embedded-hal = "1.0.0"
embedded-storage = "0.3.1"

# dependencies for embassy
embassy-executor = { version = "0.7.0", features = [
    "task-arena-size-32768",
    "executor-thread",
    "log",
] }
embassy-time = { version = "0.4.0", features = ["generic-queue-8"] }
embassy-sync = "0.6.1"
embassy-futures = "0.1.1"
embassy-embedded-hal = "0.3.0"

# dependencies for wifi feature
esp-wifi = { version = "0.12.0", features = [
    "log",
    "wifi",
    "utils",
], optional = true, default-features = false }
esp-alloc = { version = "0.6.0", optional = true }
embassy-net = { version = "0.6.0", features = [
    "tcp",
    "udp",
    "dns",
    "dhcpv4",
    "medium-ethernet",
    "proto-ipv4",
], optional = true }
smoltcp = { version = "0.12.0", default-features = false, features = [
    "medium-ethernet",
    "socket-raw",
    "proto-ipv4",
], optional = true }
esp-embassy-wifihelper = { version = "0.2.3", default-features = false, optional = true }

esp-wifi-sys = { version = "0.7.1", default-features = false, optional = true }

[features]
wifi = [
    "dep:esp-wifi",
    "dep:esp-alloc",
    "dep:embassy-net",
    "dep:smoltcp",
    "dep:esp-embassy-wifihelper",
]

esp32 = [
    "esp-hal/esp32",
    "esp-hal-embassy/esp32",
    "esp-storage/esp32",
    "esp-println/esp32",
    "esp-println/uart",
]
esp32c2 = [
    "esp-hal/esp32c2",
    "esp-hal-embassy/esp32c2",
    "esp-storage/esp32c2",
    "esp-println/esp32c2",
    "esp-println/uart",
]
esp32c3 = [
    "esp-hal/esp32c3",
    "esp-hal-embassy/esp32c3",
    "esp-storage/esp32c3",
    "esp-println/esp32c3",
    "esp-println/uart",
]
esp32c6 = [
    "esp-hal/esp32c6",
    "esp-hal-embassy/esp32c6",
    "esp-storage/esp32c6",
    "esp-println/esp32c6",
    "esp-println/jtag-serial",
]
esp32h2 = [
    "esp-hal/esp32h2",
    "esp-hal-embassy/esp32h2",
    "esp-storage/esp32h2",
    "esp-println/esp32h2",
    "esp-println/jtag-serial",
]
esp32s2 = [
    "esp-hal/esp32s2",
    "esp-hal-embassy/esp32s2",
    "esp-storage/esp32s2",
    "esp-println/esp32s2",
    "esp-println/uart",
]
esp32s3 = [
    "esp-hal/esp32s3",
    "esp-hal-embassy/esp32s3",
    "esp-storage/esp32s3",
    "esp-println/esp32s3",
    "esp-println/jtag-serial",
]

esp32example = ["esp32", "dep:esp-backtrace", "esp-backtrace/esp32"]
esp32c2example = ["esp32c2", "dep:esp-backtrace", "esp-backtrace/esp32c2"]
esp32c3example = ["esp32c3", "dep:esp-backtrace", "esp-backtrace/esp32c3"]
esp32c6example = ["esp32c6", "dep:esp-backtrace", "esp-backtrace/esp32c6"]
esp32h2example = ["esp32h2", "dep:esp-backtrace", "esp-backtrace/esp32h2"]
esp32s2example = ["esp32s2", "dep:esp-backtrace", "esp-backtrace/esp32s2"]
esp32s3example = ["esp32s3", "dep:esp-backtrace", "esp-backtrace/esp32s3"]

esp32wifiexample = [
    "esp32example",
    "wifi",
    "esp-embassy-wifihelper/esp32",
    "esp-wifi/esp32",
]
esp32c2wifiexample = [
    "esp32c2example",
    "wifi",
    "esp-embassy-wifihelper/esp32c2",
    "esp-wifi/esp32c2",
]
esp32c3wifiexample = [
    "esp32c3example",
    "wifi",
    "esp-embassy-wifihelper/esp32c3",
    "esp-wifi/esp32c3",
]
esp32c6wifiexample = [
    "esp32c6example",
    "wifi",
    "esp-embassy-wifihelper/esp32c6",
    "esp-wifi/esp32c6",
]
esp32h2wifiexample = [
    "esp32h2example",
    "wifi",
    "esp-embassy-wifihelper/esp32h2",
    "esp-wifi/esp32h2",
]
esp32s2wifiexample = [
    "esp32s2example",
    "wifi",
    "esp-embassy-wifihelper/esp32s2",
    "esp-wifi/esp32s2",
]
esp32s3wifiexample = [
    "esp32s3example",
    "wifi",
    "esp-embassy-wifihelper/esp32s3",
    "esp-wifi/esp32s3",
]

[[example]]
name = "config_uart"

[[example]]
name = "config_wifi"

[profile.dev.package.esp-storage]
opt-level = 3
